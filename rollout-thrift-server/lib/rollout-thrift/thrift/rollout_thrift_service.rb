#
# Autogenerated by Thrift Compiler (0.10.0)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#

require 'thrift'
require 'rollout-thrift_types'

module Com
  module Personali
    module RolloutThrift
      module RolloutThriftService
        class Client
          include ::Thrift::Client

          def isActive(feature)
            send_isActive(feature)
            return recv_isActive()
          end

          def send_isActive(feature)
            send_message('isActive', IsActive_args, :feature => feature)
          end

          def recv_isActive()
            result = receive_message(IsActive_result)
            return result.success unless result.success.nil?
            raise ::Thrift::ApplicationException.new(::Thrift::ApplicationException::MISSING_RESULT, 'isActive failed: unknown result')
          end

          def activate(feature)
            send_activate(feature)
            recv_activate()
          end

          def send_activate(feature)
            send_message('activate', Activate_args, :feature => feature)
          end

          def recv_activate()
            result = receive_message(Activate_result)
            return
          end

        end

        class Processor
          include ::Thrift::Processor

          def process_isActive(seqid, iprot, oprot)
            args = read_args(iprot, IsActive_args)
            result = IsActive_result.new()
            result.success = @handler.isActive(args.feature)
            write_result(result, oprot, 'isActive', seqid)
          end

          def process_activate(seqid, iprot, oprot)
            args = read_args(iprot, Activate_args)
            result = Activate_result.new()
            @handler.activate(args.feature)
            write_result(result, oprot, 'activate', seqid)
          end

        end

        # HELPER FUNCTIONS AND STRUCTURES

        class IsActive_args
          include ::Thrift::Struct, ::Thrift::Struct_Union
          FEATURE = 1

          FIELDS = {
            FEATURE => {:type => ::Thrift::Types::STRING, :name => 'feature'}
          }

          def struct_fields; FIELDS; end

          def validate
          end

          ::Thrift::Struct.generate_accessors self
        end

        class IsActive_result
          include ::Thrift::Struct, ::Thrift::Struct_Union
          SUCCESS = 0

          FIELDS = {
            SUCCESS => {:type => ::Thrift::Types::BOOL, :name => 'success'}
          }

          def struct_fields; FIELDS; end

          def validate
          end

          ::Thrift::Struct.generate_accessors self
        end

        class Activate_args
          include ::Thrift::Struct, ::Thrift::Struct_Union
          FEATURE = 1

          FIELDS = {
            FEATURE => {:type => ::Thrift::Types::STRING, :name => 'feature'}
          }

          def struct_fields; FIELDS; end

          def validate
          end

          ::Thrift::Struct.generate_accessors self
        end

        class Activate_result
          include ::Thrift::Struct, ::Thrift::Struct_Union

          FIELDS = {

          }

          def struct_fields; FIELDS; end

          def validate
          end

          ::Thrift::Struct.generate_accessors self
        end

      end

    end
  end
end
